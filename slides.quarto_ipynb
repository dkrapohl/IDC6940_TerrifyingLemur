{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Time Series Augmented Random Forest Models for Stock Market Index Direction Prediction\"\n",
        "subtitle: \"UWF Capstone\"\n",
        "author: \"Don Krapohl (Advisor: Dr. Shusen Pu)\"\n",
        "date: '`r Sys.Date()`'\n",
        "format:\n",
        "  revealjs\n",
        "course: Capstone Projects in Data Science\n",
        "bibliography: references.bib # file contains bibtex for references\n",
        "#always_allow_html: true # this allows to get PDF with HTML features\n",
        "self-contained: true\n",
        "execute: \n",
        "  warning: false\n",
        "  message: false\n",
        "editor: \n",
        "  markdown: \n",
        "    wrap: 72\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "# Introduction {#sec-introduction}\n",
        "\n",
        "## Background and Motivation {#sec-background}\n",
        "\n",
        "Discuss the challenge of predicting stock market movements and the practical implications for portfolio management, risk assessment, and trading strategies. Explain why traditional time series methods alone may be insufficient and how machine learning approaches offer complementary strengths.\n",
        "\n",
        "## Research Problem {#sec-problem}\n",
        "\n",
        "Articulate the core research question: Can Random Forest models enhanced with time series-derived features improve prediction accuracy for 20-day S&P 500 directional movements compared to traditional approaches? Address the specific challenge that Random Forest models lack inherent temporal memory.\n",
        "\n",
        "## Research Objectives {#sec-objectives}\n",
        "\n",
        "State specific goals: (1) Develop a hybrid methodology combining ARMA feature engineering with Random Forest classification, (2) Identify optimal lag structures and moving average windows through systematic time series analysis, (3) Evaluate model performance using multiple metrics, (4) Determine feature importance for market direction prediction.\n",
        "\n",
        "## Significance of Study {#sec-significance}\n",
        "\n",
        "Explain the theoretical contribution to the literature on hybrid forecasting models and practical value for quantitative finance practitioners. Emphasize the novelty of your systematic approach to time series feature engineering for ensemble learning methods.\n",
        "\n",
        "## Scope and Limitations {#sec-scope}\n",
        "\n",
        "Define the temporal scope (1990-2024), geographic focus (U.S. markets via S&P 500), prediction horizon (20-day directional movement), and acknowledge limitations such as market regime changes, transaction costs not modeled, and the binary classification constraint.\n",
        "\n",
        "## Thesis Organization {#sec-organization}\n",
        "\n",
        "Provide a roadmap of subsequent chapters and their relationships.\n",
        "\n",
        "# Literature Review {#sec-literature}\n",
        "\n",
        "## Overview of Stock Market Prediction {#sec-lit-overview}\n",
        "\n",
        "Summarize the evolution from efficient market hypothesis to behavioral finance and computational prediction approaches. Discuss why market prediction remains challenging despite advances in data availability and computational power.\n",
        "\n",
        "## Traditional Time Series Approaches {#sec-lit-timeseries}\n",
        "\n",
        "### ARMA and ARIMA Models {#sec-lit-arma}\n",
        "\n",
        "Review autoregressive and moving average models, their mathematical foundations, and their historical application to financial time series. Discuss limitations including linearity assumptions and difficulty capturing volatility clustering.\n",
        "\n",
        "### GARCH and Volatility Modeling {#sec-lit-garch}\n",
        "\n",
        "Explain how GARCH models address volatility clustering in financial returns. Discuss their role in understanding conditional heteroskedasticity and why volatility features matter for prediction.\n",
        "\n",
        "### VAR and Multivariate Time Series {#sec-lit-var}\n",
        "\n",
        "Review vector autoregression for capturing relationships among multiple time series variables and its relevance to incorporating multiple market indicators.\n",
        "\n",
        "## Machine Learning in Financial Prediction {#sec-lit-ml}\n",
        "\n",
        "### Early Applications: Neural Networks and SVMs {#sec-lit-early}\n",
        "\n",
        "Trace the adoption of artificial neural networks and support vector machines for market prediction in the 1990s-2000s. Highlight key findings and persistent challenges.\n",
        "\n",
        "### Tree-Based Ensemble Methods {#sec-lit-ensemble}\n",
        "\n",
        "Discuss the emergence of bagging, boosting, and Random Forest methods in financial applications. Emphasize their advantages in handling nonlinear relationships and mixed feature types.\n",
        "\n",
        "### Recent Deep Learning Approaches {#sec-lit-deep}\n",
        "\n",
        "Briefly review LSTM, GRU, and attention mechanisms for sequence modeling in finance, noting their computational requirements and data needs.\n",
        "\n",
        "## Hybrid and Augmented Approaches {#sec-lit-hybrid}\n",
        "\n",
        "### Feature Engineering from Time Series {#sec-lit-features}\n",
        "\n",
        "Review literature on extracting time series properties (stationarity, autocorrelation, volatility measures) as features for machine learning models. Cite specific examples from stock prediction studies.\n",
        "\n",
        "### Ensemble Methods with Time Series Components {#sec-lit-ensemble-ts}\n",
        "\n",
        "Discuss papers that combine traditional econometric features with machine learning classifiers, particularly Random Forest applications in financial markets [@basak2019; @ghosh2022; @sadorsky2021].\n",
        "\n",
        "### Technical Indicators and Feature Selection {#sec-lit-technical}\n",
        "\n",
        "Review common technical indicators (MACD, RSI, Bollinger Bands) and their theoretical justification. Discuss feature importance analysis in tree-based models.\n",
        "\n",
        "## Research Gap and Contribution {#sec-lit-gap}\n",
        "\n",
        "Identify the specific gap your research addresses: systematic integration of ARMA-derived lag structures with Random Forest classification for medium-term (20-day) directional prediction. Explain how your approach differs from existing studies.\n",
        "\n",
        "# Theoretical Framework {#sec-theory}\n",
        "\n",
        "## Random Forest Methodology {#sec-theory-rf}\n",
        "\n",
        "### Decision Trees: Foundation {#sec-theory-trees}\n",
        "\n",
        "Explain binary decision trees, recursive partitioning, and the concept of splitting criteria. Introduce the CART (Classification and Regression Trees) algorithm as the basis for Random Forest.\n",
        "\n",
        "### Splitting Criteria: Gini Impurity {#sec-theory-gini}\n",
        "\n",
        "Present the mathematical derivation of Gini impurity for classification:\n",
        "\n",
        "$$G = 1 - \\sum_{i=1}^{C} p_i^2$$ {#eq-gini}\n",
        "\n",
        "where $G$ is the Gini impurity measure at the node, $C$ is the number of classes, and $p_i$ is the proportion of samples in the node that belong to class $i$.\n",
        "\n",
        "Explain how this measures node purity and guides optimal splits. Discuss why Gini is preferred over entropy in many implementations.\n",
        "\n",
        "### Ensemble Learning Theory {#sec-theory-ensemble}\n",
        "\n",
        "Introduce bootstrap aggregating (bagging) and its theoretical justification through variance reduction. Explain the \"wisdom of crowds\" phenomenon and Breiman's (2001) foundational work.\n",
        "\n",
        "### Random Forest Algorithm {#sec-theory-rf-algo}\n",
        "\n",
        "Provide detailed algorithm description: (1) Bootstrap sampling from training data, (2) Random feature subset selection at each split, (3) Tree growing without pruning, (4) Aggregation through majority voting. Include pseudocode.\n",
        "\n",
        "::: {.callout-note}\n",
        "## Random Forest Algorithm Pseudocode\n",
        "\n",
        "```\n",
        "for b = 1 to B:\n",
        "    Draw bootstrap sample of size n from training data\n",
        "    Grow tree T_b:\n",
        "        At each node:\n",
        "            Randomly select m features from p total features\n",
        "            Choose best split among these m features\n",
        "            Split node into two child nodes\n",
        "        Continue until minimum node size reached\n",
        "Return ensemble {T_1, T_2, ..., T_B}\n",
        "\n",
        "For prediction:\n",
        "    Aggregate predictions from all B trees (majority vote for classification)\n",
        "```\n",
        ":::\n",
        "\n",
        "### Mathematical Properties {#sec-theory-properties}\n",
        "\n",
        "Discuss bias-variance tradeoff in Random Forest, convergence properties as the number of trees increases, and theoretical generalization error bounds.\n",
        "\n",
        "### Out-of-Bag Error Estimation {#sec-theory-oob}\n",
        "\n",
        "Explain how OOB samples provide internal cross-validation without requiring a separate test set. Derive the OOB error estimator mathematically.\n",
        "\n",
        "### Feature Importance Measures {#sec-theory-importance}\n",
        "\n",
        "Present two importance metrics: mean decrease in impurity and mean decrease in accuracy through permutation. Explain their interpretation and limitations.\n",
        "\n",
        "### Hyperparameters and Tuning {#sec-theory-hyperparams}\n",
        "\n",
        "Discuss key hyperparameters: number of trees, maximum depth, minimum samples per split/leaf, max features per split, and their effects on model performance.\n",
        "\n",
        "## Time Series Analysis Framework {#sec-theory-ts}\n",
        "\n",
        "### Stationarity and Unit Root Tests {#sec-theory-stationarity}\n",
        "\n",
        "Define weak and strict stationarity. Present the Augmented Dickey-Fuller (ADF) test:\n",
        "\n",
        "$$\\Delta Y_t = \\alpha + \\beta t + \\gamma Y_{t-1} + \\sum_{i=1}^{p} \\delta_i \\Delta Y_{t-i} + \\epsilon_t$$ {#eq-adf}\n",
        "\n",
        "Explain hypothesis testing for unit roots and implications for modeling.\n",
        "\n",
        "### Autocorrelation and Partial Autocorrelation {#sec-theory-acf}\n",
        "\n",
        "Derive the autocorrelation function (ACF):\n",
        "\n",
        "$$\\rho(k) = \\frac{Cov(X_t, X_{t-k})}{\\sqrt{Var(X_t)Var(X_{t-k})}} = \\frac{\\gamma(k)}{\\gamma(0)}$$ {#eq-acf}\n",
        "\n",
        "Explain the partial autocorrelation function (PACF) as the correlation between $X_t$ and $X_{t-k}$ after controlling for intermediate lags. Discuss their use in model identification.\n",
        "\n",
        "### ARMA Model Structure {#sec-theory-arma}\n",
        "\n",
        "Present the general ARMA(p,q) model:\n",
        "\n",
        "$$Y_t = c + \\sum_{i=1}^{p} \\phi_i Y_{t-i} + \\sum_{j=1}^{q} \\theta_j \\epsilon_{t-j} + \\epsilon_t$$ {#eq-arma}\n",
        "\n",
        "where $\\phi_i$ are autoregressive coefficients and $\\theta_j$ are moving average coefficients. Discuss identification through ACF/PACF patterns.\n",
        "\n",
        "### Model Selection Criteria {#sec-theory-criteria}\n",
        "\n",
        "Derive and explain information criteria:\n",
        "\n",
        "$$AIC = 2k - 2\\ln(\\hat{L})$$ {#eq-aic}\n",
        "\n",
        "$$BIC = k\\ln(n) - 2\\ln(\\hat{L})$$ {#eq-bic}\n",
        "\n",
        "where $k$ is the number of parameters, $n$ is sample size, and $\\hat{L}$ is maximum likelihood. Discuss the BIC penalty for model complexity.\n",
        "\n",
        "### ARCH/GARCH for Volatility {#sec-theory-arch}\n",
        "\n",
        "Introduce ARCH(p) models for volatility clustering:\n",
        "\n",
        "$$\\sigma_t^2 = \\alpha_0 + \\sum_{i=1}^{p} \\alpha_i \\epsilon_{t-i}^2$$ {#eq-arch}\n",
        "\n",
        "Explain why volatility matters for stock prediction and how ARCH helps identify relevant lag structures in squared residuals.\n",
        "\n",
        "### Differencing for Trend Removal {#sec-theory-differencing}\n",
        "\n",
        "Present first-order differencing:\n",
        "\n",
        "$$Y_t' = Y_t - Y_{t-1}$$ {#eq-difference}\n",
        "\n",
        "Explain when higher-order differencing is needed and the risk of over-differencing.\n",
        "\n",
        "## Hybrid Model Framework {#sec-theory-hybrid}\n",
        "\n",
        "### Feature Engineering Strategy {#sec-theory-strategy}\n",
        "\n",
        "Explain the conceptual approach: use time series analysis to identify temporal dependencies, then encode these as features for Random Forest. Justify why this addresses Random Forest's lack of temporal memory.\n",
        "\n",
        "### Lag Variable Construction {#sec-theory-lags}\n",
        "\n",
        "Describe how identified lags from ACF/PACF and ARCH analysis translate into lagged return variables: $r_{t-k}$ for relevant lags $k$.\n",
        "\n",
        "### Rolling Statistics as Features {#sec-theory-rolling}\n",
        "\n",
        "Explain rolling means and standard deviations as capturing local trends and volatility:\n",
        "\n",
        "$$\\bar{r}_t^{(w)} = \\frac{1}{w}\\sum_{i=0}^{w-1} r_{t-i}$$ {#eq-rolling-mean}\n",
        "\n",
        "$$\\sigma_t^{(w)} = \\sqrt{\\frac{1}{w}\\sum_{i=0}^{w-1}(r_{t-i} - \\bar{r}_t^{(w)})^2}$$ {#eq-rolling-sd}\n",
        "\n",
        "### Integration with Technical Indicators {#sec-theory-technical}\n",
        "\n",
        "Discuss how traditional technical indicators complement time series features by capturing momentum, trend, and volume patterns.\n",
        "\n",
        "# Methodology {#sec-methods}\n",
        "\n",
        "## Research Design {#sec-methods-design}\n",
        "\n",
        "Describe your quantitative, empirical approach combining exploratory time series analysis with supervised machine learning classification. Outline the overall workflow from data acquisition to model evaluation.\n",
        "\n",
        "## Data Collection and Preparation {#sec-methods-data}\n",
        "\n",
        "### Data Sources {#sec-methods-sources}\n",
        "\n",
        "Detail the Kaggle \"34-year Daily Stock Data\" and Yahoo Finance (yfinance) APIs. Explain variable selection rationale covering macroeconomic indicators, market indices, and OHLC data.\n",
        "\n",
        "### Data Integration {#sec-methods-integration}\n",
        "\n",
        "Describe the merging process joining Kaggle and Yahoo Finance data on dates, handling any discrepancies or missing values during the merge operation.\n",
        "\n",
        "### Temporal Coverage and Sample Size {#sec-methods-coverage}\n",
        "\n",
        "Report the final dataset span (1990-2024), number of observations (~9,000), and justify the starting date as capturing modern market dynamics without distant historical anomalies.\n",
        "\n",
        "## Feature Engineering Pipeline {#sec-methods-features}\n",
        "\n",
        "### Return Calculations {#sec-methods-returns}\n",
        "\n",
        "Document the calculation of 1-day log or percentage returns and cumulative returns over 5, 20, 50, and 200-day windows.\n",
        "\n",
        "### Target Variable Construction {#sec-methods-target}\n",
        "\n",
        "Explain the creation of binary direction variables (up/down) based on forward-looking returns at 1, 5, 20, 50, and 200-day horizons, with primary focus on 20-day direction.\n",
        "\n",
        "### Technical Indicator Generation {#sec-methods-indicators}\n",
        "\n",
        "List all technical indicators computed (MACD, RSI, Stochastic K/D, ADX, OBV, ATR, Bollinger Bands, EMA, SMA) and their standard parameter settings from pandas_ta.\n",
        "\n",
        "### Time Series Feature Extraction {#sec-methods-ts-features}\n",
        "\n",
        "Describe the systematic process: (1) ADF test for stationarity, (2) ACF/PACF analysis on returns or differenced series, (3) ARCH model fitting with lag selection via AIC/BIC, (4) Creation of lag variables at identified lags (1, 2, 11), (5) Rolling mean and standard deviation at 5 and 20-day windows.\n",
        "\n",
        "### Data Cleaning {#sec-methods-cleaning}\n",
        "\n",
        "Explain handling of missing values introduced by lagged and rolling features through dropna(), resulting in a complete cases analysis.\n",
        "\n",
        "## Exploratory Data Analysis {#sec-methods-eda}\n",
        "\n",
        "### Descriptive Statistics {#sec-methods-descriptive}\n",
        "\n",
        "Report summary statistics for all features to understand distributions, ranges, and potential outliers.\n",
        "\n",
        "### Correlation Analysis {#sec-methods-correlation}\n",
        "\n",
        "Use correlation matrices and decile binning to identify multicollinearity concerns and relationships between features and target variables.\n",
        "\n",
        "### Target Variable Distribution {#sec-methods-target-dist}\n",
        "\n",
        "Examine class balance in directional targets to assess if class imbalance adjustments are needed.\n",
        "\n",
        "### Time Series Properties Visualization {#sec-methods-ts-viz}\n",
        "\n",
        "Present ACF/PACF plots, stationarity test results, and ARCH lag selection tables to justify feature engineering decisions.\n",
        "\n",
        "## Model Development {#sec-methods-model}\n",
        "\n",
        "### Train-Test Strategy {#sec-methods-strategy}\n",
        "\n",
        "Justify the use of k-fold cross-validation rather than temporal train-test split given limited sample size. Note the trade-off with respect to time-dependent structure.\n",
        "\n",
        "### Cross-Validation Scheme {#sec-methods-cv}\n",
        "\n",
        "Detail the 10-fold repeated cross-validation (10 repeats) approach, explaining how this provides robust performance estimates through 100 total model fits.\n",
        "\n",
        "### Random Forest Configuration {#sec-methods-config}\n",
        "\n",
        "Specify hyperparameters: n_estimators=100, max_depth=10, oob_score=True, random_state=17. Explain choices based on preliminary experiments and computational constraints.\n",
        "\n",
        "### OOB Evaluation {#sec-methods-oob}\n",
        "\n",
        "Describe how out-of-bag samples provide an additional unbiased performance metric alongside cross-validation.\n",
        "\n",
        "## Model Evaluation Framework {#sec-methods-evaluation}\n",
        "\n",
        "### Performance Metrics {#sec-methods-metrics}\n",
        "\n",
        "Define accuracy, precision, recall, F1-score, and ROC-AUC in the context of binary classification. Explain why multiple metrics are necessary.\n",
        "\n",
        "### Confusion Matrix Analysis {#sec-methods-confusion}\n",
        "\n",
        "Describe interpretation of true positives, false positives, true negatives, and false negatives for market direction prediction.\n",
        "\n",
        "### Feature Importance Analysis {#sec-methods-importance}\n",
        "\n",
        "Explain how Random Forest's built-in importance scores will identify which engineered features and time series lags contribute most to prediction accuracy.\n",
        "\n",
        "### Comparison Baselines {#sec-methods-baselines}\n",
        "\n",
        "Discuss potential baseline comparisons: naïve forecasting (assuming no change), Random Forest without time series features, and pure ARMA forecasting.\n",
        "\n",
        "# Implementation {#sec-implementation}\n",
        "\n",
        "## Link to Jupyter Notebook {#sec-jupyter-notebook}\n",
        "\n",
        "My Capstone Jupyter notebook (https://github.com/dkrapohl/IDC6940_TerrifyingLemur/blob/main/DS_Capstone.ipynb)\n",
        "\n",
        "## Software and Libraries {#sec-impl-software}\n",
        "\n",
        "List Python 3.x with key packages: pandas, numpy, yfinance, scikit-learn, pandas_ta, statsmodels, arch, matplotlib, seaborn. Mention computational environment (e.g., Google Colab, local machine specs).\n",
        "\n",
        "## Data Acquisition Code {#sec-impl-data}\n",
        "\n",
        "Present code snippets for downloading data via Kaggle API and yfinance, including authentication and error handling.\n"
      ],
      "id": "1033378b"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: true\n",
        "\n",
        "import os\n",
        "import pandas as pd\n",
        "import yfinance as yf\n",
        "\n",
        "# Kaggle API setup\n",
        "os.environ['KAGGLE_USERNAME'] = \"your_username\"\n",
        "os.environ['KAGGLE_KEY'] = \"your_key\"\n",
        "\n",
        "# Download Kaggle dataset\n",
        "!kaggle datasets download -d shiveshprakash/34-year-daily-stock-data\n",
        "!unzip -o 34-year-daily-stock-data.zip\n",
        "\n",
        "# Load Kaggle data\n",
        "df_kaggle = pd.read_csv(\"stock_data.csv\", parse_dates=['dt'])\n",
        "\n",
        "# Download Yahoo Finance data\n",
        "ohlc = yf.download(\"^GSPC\", start=\"1990-01-01\", end='2024-02-16')"
      ],
      "id": "b6b704a9",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Time Series Analysis Implementation {#sec-impl-ts}\n",
        "\n",
        "Show code for ADF testing, ACF/PACF plotting, ARCH model fitting loop over multiple lags, and AIC/BIC comparison tables.\n"
      ],
      "id": "ab78d4b1"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: true\n",
        "\n",
        "from statsmodels.tsa.stattools import adfuller\n",
        "from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n",
        "from arch import arch_model\n",
        "\n",
        "# ADF Test\n",
        "result = adfuller(df['sp500_close'])\n",
        "print(f'ADF Statistic: {result[0]}, p-value: {result[1]}')\n",
        "\n",
        "# ACF/PACF plots\n",
        "plot_acf(df['1d_return'].dropna(), lags=40)\n",
        "plot_pacf(df['1d_return'].dropna(), lags=40)\n",
        "\n",
        "# ARCH lag selection\n",
        "y = df['1d_return_pct'].dropna()\n",
        "aic_list, bic_list = [], []\n",
        "\n",
        "for p in range(1, 31):\n",
        "    am = arch_model(y, vol='ARCH', p=p, dist='normal')\n",
        "    res = am.fit(disp='off')\n",
        "    aic_list.append(res.aic)\n",
        "    bic_list.append(res.bic)"
      ],
      "id": "30b3c25a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Feature Engineering Code {#sec-impl-features}\n",
        "\n",
        "Provide code for lag variable creation, rolling statistics, technical indicator calculations, and target variable construction.\n"
      ],
      "id": "e5e07e71"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: true\n",
        "\n",
        "import pandas_ta as ta\n",
        "\n",
        "# Lag variables\n",
        "df['return_lag_1'] = df['1d_return'].shift(1)\n",
        "df['return_lag_2'] = df['1d_return'].shift(2)\n",
        "df['return_lag_11'] = df['1d_return'].shift(11)\n",
        "\n",
        "# Rolling statistics\n",
        "df['roll_mean_5'] = df['1d_return'].rolling(5).mean()\n",
        "df['roll_std_5'] = df['1d_return'].rolling(5).std()\n",
        "\n",
        "# Technical indicators\n",
        "df['rsi'] = ta.rsi(df['sp500_close'], length=14)\n",
        "macd = ta.macd(df['sp500_close'])\n",
        "df['macd'] = macd['MACD_12_26_9']\n",
        "\n",
        "# Target variable\n",
        "df['direction_20d'] = np.where(\n",
        "    df['1d_return'].rolling(20).sum().shift(-20) > 0, \n",
        "    'up', \n",
        "    'down'\n",
        ")"
      ],
      "id": "aaed7501",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Model Training Implementation {#sec-impl-training}\n",
        "\n",
        "Present the scikit-learn RandomForestClassifier setup, RepeatedKFold configuration, and cross_val_score execution with appropriate parameters.\n"
      ],
      "id": "d4af7458"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: true\n",
        "\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.model_selection import RepeatedKFold, cross_val_score\n",
        "\n",
        "# Prepare features and target\n",
        "X = df.drop(columns=['direction_1d', 'direction_5d', 'direction_20d',\n",
        "                     'Date', '1d_return', 'sp500_close'])\n",
        "y = df['direction_20d']\n",
        "\n",
        "# Define model\n",
        "rf = RandomForestClassifier(\n",
        "    n_estimators=100,\n",
        "    max_depth=10,\n",
        "    random_state=17,\n",
        "    oob_score=True,\n",
        "    n_jobs=-1\n",
        ")\n",
        "\n",
        "# Cross-validation\n",
        "cv = RepeatedKFold(n_splits=10, n_repeats=10, random_state=17)\n",
        "scores = cross_val_score(rf, X, y, cv=cv, scoring='accuracy', n_jobs=-1)\n",
        "\n",
        "print(f\"Mean Accuracy: {scores.mean():.4f}\")\n",
        "print(f\"Std Deviation: {scores.std():.4f}\")"
      ],
      "id": "7dc42ae5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Evaluation Code {#sec-impl-evaluation}\n",
        "\n",
        "Show code for generating confusion matrices, calculating performance metrics, extracting feature importances, and creating visualizations.\n"
      ],
      "id": "a0c5a24b"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: true\n",
        "\n",
        "from sklearn.metrics import confusion_matrix, classification_report\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Train final model\n",
        "rf.fit(X, y)\n",
        "\n",
        "# Feature importance\n",
        "importances = pd.DataFrame({\n",
        "    'feature': X.columns,\n",
        "    'importance': rf.feature_importances_\n",
        "}).sort_values('importance', ascending=False)\n",
        "\n",
        "# Visualization\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.barplot(data=importances.head(20), x='importance', y='feature')\n",
        "plt.title('Top 20 Feature Importances')\n",
        "plt.tight_layout()"
      ],
      "id": "af335665",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Reproducibility Considerations {#sec-impl-reproducibility}\n",
        "\n",
        "Discuss use of random seeds, data versioning, and documentation practices to ensure reproducible results.\n",
        "\n",
        "# Results {#sec-results}\n",
        "\n",
        "## Time Series Analysis Results {#sec-results-ts}\n",
        "\n",
        "### Stationarity Tests {#sec-results-stationarity}\n",
        "\n",
        "Report ADF test statistics and p-values for raw prices and differenced returns. Confirm whether differencing was necessary.\n",
        "\n",
        "### ACF and PACF Patterns {#sec-results-acf}\n",
        "\n",
        "Present ACF/PACF plots and interpret significant lags. Discuss implications for lag selection (e.g., lags 1, 2 significant in PACF).\n",
        "\n",
        "### ARCH Model Selection {#sec-results-arch}\n",
        "\n",
        "Display the AIC/BIC table for lags 1-30. Report that BIC favored lag 11 while AIC suggested lag 30. Justify your choice of lag 11 as more parsimonious.\n",
        "\n",
        "### Summary of Engineered Features {#sec-results-features}\n",
        "\n",
        "Tabulate all time series-derived features: return_lag_1, return_lag_2, return_lag_11, roll_mean_5, roll_std_5, roll_mean_20, roll_std_20.\n",
        "\n",
        "## Descriptive Statistics {#sec-results-descriptive}\n",
        "\n",
        "### Feature Distributions {#sec-results-distributions}\n",
        "\n",
        "Report means, standard deviations, min/max values for key features. Identify any extreme values or skewness.\n",
        "\n",
        "### Correlation Findings {#sec-results-correlation}\n",
        "\n",
        "Present correlation decile heatmaps. Highlight strongest correlations (e.g., between price-based features, volume indicators) and note any concerning multicollinearity.\n",
        "\n",
        "### Target Variable Balance {#sec-results-balance}\n",
        "\n",
        "Show count plots for direction_1d, direction_5d, direction_20d. Report approximate balance (e.g., 52% up days, 48% down days).\n",
        "\n",
        "## Model Performance {#sec-results-performance}\n",
        "\n",
        "### Cross-Validation Accuracy {#sec-results-cv}\n",
        "\n",
        "Report mean accuracy across 100 CV iterations with standard deviation (e.g., \"Mean Accuracy: 0.5847, Std: 0.0312\").\n",
        "\n",
        "### Out-of-Bag Score {#sec-results-oob}\n",
        "\n",
        "Report OOB accuracy as an independent validation metric (e.g., \"OOB Accuracy: 0.5821\").\n",
        "\n",
        "### Additional Metrics {#sec-results-metrics}\n",
        "\n",
        "Present precision, recall, F1-score, and ROC-AUC if computed. Discuss trade-offs between metrics.\n",
        "\n",
        "### Confusion Matrix {#sec-results-confusion}\n",
        "\n",
        "Display confusion matrix showing distribution of correct and incorrect predictions. Calculate and interpret error rates.\n",
        "\n",
        "## Feature Importance Analysis {#sec-results-importance}\n",
        "\n",
        "### Top Features {#sec-results-top-features}\n",
        "\n",
        "Rank features by importance scores. Identify whether time series lags, technical indicators, or macroeconomic variables dominate.\n",
        "\n",
        "### Engineered Feature Contribution {#sec-results-engineered}\n",
        "\n",
        "Specifically assess how time series-derived features (lags, rolling stats) compare to technical indicators in importance.\n",
        "\n",
        "### Feature Selection Implications {#sec-results-selection}\n",
        "\n",
        "Discuss whether a reduced feature set might improve model parsimony without sacrificing accuracy.\n",
        "\n",
        "## Comparative Analysis {#sec-results-comparison}\n",
        "\n",
        "### Baseline Comparisons {#sec-results-baselines}\n",
        "\n",
        "If implemented, compare against naïve forecast, RF without time series features, or simple ARMA forecasts.\n",
        "\n",
        "### Literature Comparison {#sec-results-literature}\n",
        "\n",
        "Compare your results to accuracy figures reported in similar studies [@basak2019; @ghosh2022]. Note differences in prediction horizons and feature sets.\n",
        "\n",
        "# Discussion {#sec-discussion}\n",
        "\n",
        "## Interpretation of Results {#sec-disc-interpretation}\n",
        "\n",
        "### Model Performance Context {#sec-disc-context}\n",
        "\n",
        "Discuss whether ~58% accuracy for 20-day direction prediction represents meaningful predictive power given market efficiency arguments. Compare to random walk baseline (~50%).\n",
        "\n",
        "### Value of Time Series Augmentation {#sec-disc-value}\n",
        "\n",
        "Analyze whether the time series feature engineering approach achieved its goal of imparting temporal memory to Random Forest. Evaluate if specific lags (1, 2, 11) proved valuable.\n",
        "\n",
        "### Feature Insights {#sec-disc-insights}\n",
        "\n",
        "Interpret which features drove predictions. Discuss economic intuition behind important features (e.g., if VIX is important, volatility matters; if lag features dominate, past returns inform future direction).\n",
        "\n",
        "## Practical Implications {#sec-disc-practical}\n",
        "\n",
        "### Trading Strategy Viability {#sec-disc-trading}\n",
        "\n",
        "Discuss whether the model's accuracy could inform profitable trading after accounting for transaction costs, slippage, and market impact.\n",
        "\n",
        "### Risk Management Applications {#sec-disc-risk}\n",
        "\n",
        "Suggest how directional forecasts might augment portfolio risk assessment and position sizing even if not driving outright trading signals.\n",
        "\n",
        "### Feature Monitoring {#sec-disc-monitoring}\n",
        "\n",
        "Recommend tracking key features identified as important for early signals of market regime changes.\n",
        "\n",
        "## Methodological Contributions {#sec-disc-method}\n",
        "\n",
        "### Hybrid Approach Validation {#sec-disc-validation}\n",
        "\n",
        "Assess whether systematically integrating ARMA-derived features into Random Forest is a viable general approach for financial prediction problems.\n",
        "\n",
        "### Lag Selection Framework {#sec-disc-framework}\n",
        "\n",
        "Discuss whether the AIC/BIC-driven lag selection provided a principled way to determine which lags to include, potentially generalizable to other time series classification tasks.\n",
        "\n",
        "## Limitations {#sec-disc-limitations}\n",
        "\n",
        "### Data Limitations {#sec-disc-data-limits}\n",
        "\n",
        "Acknowledge the single-market focus (S&P 500), limited to U.S. trading hours, and absence of intraday data. Discuss regime changes over 34 years.\n",
        "\n",
        "### Methodological Limitations {#sec-disc-method-limits}\n",
        "\n",
        "Note the simplification to binary classification, ignoring magnitude of moves. Discuss the use of k-fold CV rather than walk-forward validation, which may optimistically bias results.\n",
        "\n",
        "### Model Limitations {#sec-disc-model-limits}\n",
        "\n",
        "Acknowledge Random Forest's black-box nature limiting interpretability, and that ensemble methods don't provide uncertainty estimates (though OOB helps).\n",
        "\n",
        "### Practical Limitations {#sec-disc-practical-limits}\n",
        "\n",
        "Note absence of transaction cost modeling, liquidity constraints, and assumption of infinite market capacity to execute at predicted prices.\n",
        "\n",
        "## Comparison to Related Work {#sec-disc-related}\n",
        "\n",
        "### Consistency with Literature {#sec-disc-consistency}\n",
        "\n",
        "Discuss how your results align with or diverge from findings in @basak2019, @ghosh2022, @sadorsky2021, and other cited works.\n",
        "\n",
        "### Unique Contributions {#sec-disc-unique}\n",
        "\n",
        "Highlight the systematic time series feature engineering and medium-term (20-day) prediction horizon as distinguishing aspects.\n",
        "\n",
        "# Conclusions and Future Work {#sec-conclusions}\n",
        "\n",
        "## Summary of Findings {#sec-conc-summary}\n",
        "\n",
        "Recapitulate the research question, methodology, and key results. Confirm whether the hybrid approach of time series augmented Random Forest showed promise for predicting 20-day S&P 500 direction.\n",
        "\n",
        "## Theoretical Contributions {#sec-conc-theory}\n",
        "\n",
        "Summarize contributions to the literature on hybrid forecasting models, particularly bridging econometric feature engineering with machine learning classification.\n",
        "\n",
        "## Practical Contributions {#sec-conc-practical}\n",
        "\n",
        "Highlight actionable insights for quantitative analysts and portfolio managers regarding feature selection and model construction.\n",
        "\n",
        "## Future Research Directions {#sec-conc-future}\n",
        "\n",
        "### Extended Temporal Modeling {#sec-future-temporal}\n",
        "\n",
        "Suggest exploring LSTM or Transformer models that naturally handle sequences, comparing against your augmented Random Forest approach.\n",
        "\n",
        "### Non-Overlapping Windows {#sec-future-windows}\n",
        "\n",
        "Implement window-based approaches that capture sub-trends within the 20-day forecast horizon to provide more granular predictions.\n",
        "\n",
        "### Multivariate Predictions {#sec-future-multivariate}\n",
        "\n",
        "Extend from binary direction to magnitude prediction (regression) or multi-class classification (large up, small up, flat, small down, large down).\n",
        "\n",
        "### Multiple Markets and Assets {#sec-future-markets}\n",
        "\n",
        "Apply the methodology to international indices, individual stocks, commodities, or cryptocurrencies to assess generalizability.\n",
        "\n",
        "### Adaptive Models {#sec-future-adaptive}\n",
        "\n",
        "Develop online learning versions that update as new data arrives, allowing models to adapt to regime changes.\n",
        "\n",
        "### Risk-Adjusted Backtesting {#sec-future-backtest}\n",
        "\n",
        "Implement full trading simulations with transaction costs, position sizing, and risk management rules to evaluate economic significance.\n",
        "\n",
        "### Ensemble of Ensembles {#sec-future-ensemble}\n",
        "\n",
        "Combine Random Forest with other methods (gradient boosting, neural networks) in a stacked ensemble.\n",
        "\n",
        "### Explainability Enhancements {#sec-future-explain}\n",
        "\n",
        "Apply SHAP (SHapley Additive exPlanations) values or other interpretability techniques to better understand individual predictions.\n",
        "\n",
        "## Final Remarks {#sec-conc-final}\n",
        "\n",
        "Conclude with reflections on the intersection of econometrics and machine learning, the ongoing challenge of market prediction, and the importance of rigorous methodology in financial forecasting research.\n",
        "\n",
        "# References {#sec-references}\n",
        "\n",
        "::: {#refs}\n",
        ":::\n",
        "\n",
        "# Appendices {#sec-appendices}\n",
        "\n",
        "## Appendix A: Additional Statistical Tables {#sec-app-tables}\n",
        "\n",
        "Full correlation matrices, extended descriptive statistics, additional AIC/BIC tables.\n",
        "\n",
        "## Appendix B: Complete Code Listings {#sec-app-code}\n",
        "\n",
        "Full Python scripts for reproducibility, including data download, preprocessing, modeling, and visualization.\n",
        "\n",
        "## Appendix C: Extended Visualizations {#sec-app-viz}\n",
        "\n",
        "Additional plots such as feature distributions, time series of predictions vs. actuals, learning curves, and hyperparameter sensitivity analysis.\n",
        "\n",
        "## Appendix D: Data Dictionary {#sec-app-data}\n",
        "\n",
        "Comprehensive table of all variables with definitions, sources, and transformations applied.\n",
        "\n",
        "## Appendix E: Mathematical Derivations {#sec-app-math}\n",
        "\n",
        "Detailed proofs or derivations for key formulas if omitted from main text for brevity.\n",
        "\n",
        "---\n",
        "\n",
        "## Notes on Quarto Features Used\n",
        "\n",
        "- **Cross-references**: Use `@sec-label` to reference sections, `@eq-label` for equations, `@fig-label` for figures, `@tbl-label` for tables\n",
        "- **Citations**: Use `@citationkey` for citations (requires a `references.bib` file)\n",
        "- **Code chunks**: Use `{python}` with options like `#| eval: false` and `#| echo: true`\n",
        "- **Callouts**: Use `::: {.callout-note}` for important notes\n",
        "- **Equations**: Use `$$...$$ {#eq-label}` for numbered equations\n",
        "- **Math**: Standard LaTeX math notation works throughout"
      ],
      "id": "edfad648"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}